Falsifying model gan with a timeout of 3600 seconds.
Counter examples will be saved to cex20210322.
GAN+DNN PGD 0 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219)) ==> ((-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647))))

dnnf
  result: sat
  falsification time: 486.4017
  total time: 543.7694
GAN+DNN PGD 1 seed=0
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

GAN+DNN PGD 2 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659) & (-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 3 seed=0
Falsifying: Forall(x0, (((-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643)) ==> ((-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988))))

GAN+DNN PGD 4 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 5 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648))))

GAN+DNN PGD 6 seed=0
Falsifying: Forall(x0, (((-3 <= x0) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

GAN+DNN PGD 7 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908)) ==> ((-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306))))

GAN+DNN PGD 8 seed=0
Falsifying: Forall(x0, (((1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196)) ==> ((-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636))))

GAN+DNN PGD 9 seed=0
Falsifying: Forall(x0, (((2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966) & (-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 0 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 136.2527
  total time: 146.1057
GAN+DNN PGD 1 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295) & (-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 259.2528
  total time: 269.0768
GAN+DNN PGD 2 seed=1
Falsifying: Forall(x0, (((-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (-3 <= x0) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659) & (-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 3 seed=1
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (-3 <= x0) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988) & (-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 4 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 5 seed=1
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (x0 <= 3) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648) & (-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 6 seed=1
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

GAN+DNN PGD 7 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 8 seed=1
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636) & (-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 9 seed=1
Falsifying: Forall(x0, (((2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966))))

GAN+DNN PGD 0 seed=2
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (x0 <= 3) & (-3 <= x0)) ==> ((-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647))))

dnnf
  result: sat
  falsification time: 136.7334
  total time: 146.5215
GAN+DNN PGD 1 seed=2
Falsifying: Forall(x0, (((-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906)) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

dnnf
  result: sat
  falsification time: 2611.8854
  total time: 2621.7168
GAN+DNN PGD 2 seed=2
Falsifying: Forall(x0, (((-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (x0 <= 3) & (-3 <= x0)) ==> ((-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659))))

GAN+DNN PGD 3 seed=2
Falsifying: Forall(x0, (((-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (x0 <= 3)) ==> ((-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988))))

GAN+DNN PGD 4 seed=2
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (x0 <= 3) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 5 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648) & (-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 6 seed=2
Falsifying: Forall(x0, (((0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (-3 <= x0) & (x0 <= 3)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

GAN+DNN PGD 7 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 8 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196)) ==> ((-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636))))

GAN+DNN PGD 9 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966))))

GAN+DNN PGD 0 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 134.1601
  total time: 143.6440
GAN+DNN PGD 1 seed=3
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (x0 <= 3) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

dnnf
  result: sat
  falsification time: 1945.1559
  total time: 1954.6378
GAN+DNN PGD 2 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036)) ==> ((-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659))))

GAN+DNN PGD 3 seed=3
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (-3 <= x0) & (x0 <= 3) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988) & (-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 4 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318))))

GAN+DNN PGD 5 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (x0 <= 3)) ==> ((-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648))))

GAN+DNN PGD 6 seed=3
Falsifying: Forall(x0, (((0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (x0 <= 3) & (-3 <= x0)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

GAN+DNN PGD 7 seed=3
Falsifying: Forall(x0, (((0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 8 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636) & (-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 9 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966))))

GAN+DNN PGD 0 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 128.4722
  total time: 137.7664
GAN+DNN PGD 1 seed=4
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-3 <= x0) & (x0 <= 3) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295) & (-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 1921.0375
  total time: 1930.3153
GAN+DNN PGD 2 seed=4
Falsifying: Forall(x0, (((-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659) & (-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 3 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988))))

GAN+DNN PGD 4 seed=4
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 5 seed=4
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648) & (-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 6 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976) & (-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 7 seed=4
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908) & (-3 <= x0) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306))))

GAN+DNN PGD 8 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636) & (-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

GAN+DNN PGD 9 seed=4
Falsifying: Forall(x0, (((x0 <= 3) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966) & (-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

