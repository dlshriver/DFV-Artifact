Falsifying model vae with a timeout of 3600 seconds.
Counter examples will be saved to cex20210322.
VAE+DNN PGD 0 seed=0
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (x0 <= 3) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 221.8501
  total time: 247.5306
VAE+DNN PGD 1 seed=0
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

dnnf
  result: sat
  falsification time: 538.6192
  total time: 564.6478
VAE+DNN PGD 2 seed=0
Falsifying: Forall(x0, (((-3 <= x0) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (x0 <= 3)) ==> ((-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659))))

dnnf
  result: sat
  falsification time: 162.6634
  total time: 182.0181
VAE+DNN PGD 3 seed=0
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988))))

dnnf
  result: sat
  falsification time: 170.6744
  total time: 189.0098
VAE+DNN PGD 4 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (-3 <= x0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 650.5694
  total time: 669.4389
VAE+DNN PGD 5 seed=0
Falsifying: Forall(x0, (((x0 <= 3) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648) & (-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 6 seed=0
Falsifying: Forall(x0, (((0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976) & (-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 7 seed=0
Falsifying: Forall(x0, (((0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 8 seed=0
Falsifying: Forall(x0, (((1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196)) ==> ((-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636))))

VAE+DNN PGD 9 seed=0
Falsifying: Forall(x0, (((2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966) & (-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 0 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 165.7109
  total time: 170.5918
VAE+DNN PGD 1 seed=1
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

dnnf
  result: sat
  falsification time: 63.1763
  total time: 68.0965
VAE+DNN PGD 2 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (x0 <= 3)) ==> ((-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659))))

dnnf
  result: sat
  falsification time: 62.8617
  total time: 67.7509
VAE+DNN PGD 3 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (x0 <= 3) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988) & (-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 61.2751
  total time: 66.1543
VAE+DNN PGD 4 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 268.2253
  total time: 273.1639
VAE+DNN PGD 5 seed=1
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642)) ==> ((-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648))))

dnnf
  result: sat
  falsification time: 533.2989
  total time: 538.2217
VAE+DNN PGD 6 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

VAE+DNN PGD 7 seed=1
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908) & (x0 <= 3) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 8 seed=1
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636) & (-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 9 seed=1
Falsifying: Forall(x0, (((2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966))))

VAE+DNN PGD 0 seed=2
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (-3 <= x0) & (x0 <= 3)) ==> ((-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647))))

dnnf
  result: sat
  falsification time: 66.6447
  total time: 71.9903
VAE+DNN PGD 1 seed=2
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (x0 <= 3) & (-3 <= x0) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295))))

dnnf
  result: sat
  falsification time: 129.9362
  total time: 135.2459
VAE+DNN PGD 2 seed=2
Falsifying: Forall(x0, (((-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (-3 <= x0) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659) & (-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 69.4139
  total time: 74.7174
VAE+DNN PGD 3 seed=2
Falsifying: Forall(x0, (((-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643)) ==> ((-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988))))

dnnf
  result: sat
  falsification time: 69.5258
  total time: 74.9129
VAE+DNN PGD 4 seed=2
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0) & (-3 <= x0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 703.5953
  total time: 708.9901
VAE+DNN PGD 5 seed=2
Falsifying: Forall(x0, (((0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648) & (-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 6 seed=2
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

VAE+DNN PGD 7 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 8 seed=2
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636) & (-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 9 seed=2
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966) & (-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 0 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (x0 <= 3)) ==> ((-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647))))

dnnf
  result: sat
  falsification time: 61.6810
  total time: 66.5390
VAE+DNN PGD 1 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295) & (-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 68.8196
  total time: 73.6739
VAE+DNN PGD 2 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (-3 <= x0)) ==> ((-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659))))

dnnf
  result: sat
  falsification time: 328.2465
  total time: 333.1052
VAE+DNN PGD 3 seed=3
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (x0 <= 3) & (-3 <= x0) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988) & (-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 61.6719
  total time: 66.9858
VAE+DNN PGD 4 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 942.4831
  total time: 947.3647
VAE+DNN PGD 5 seed=3
Falsifying: Forall(x0, (((0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (-3 <= x0)) ==> ((-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648))))

dnnf
  result: sat
  falsification time: 830.6307
  total time: 835.5309
VAE+DNN PGD 6 seed=3
Falsifying: Forall(x0, (((-3 <= x0) & (x0 <= 3) & (0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034)) ==> ((-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976))))

VAE+DNN PGD 7 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306) & (-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 8 seed=3
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636))))

VAE+DNN PGD 9 seed=3
Falsifying: Forall(x0, (((x0 <= 3) & (-3 <= x0) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966) & (-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 0 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -2.197224577336219) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.08726646259971647) & (-0.08726646259971647 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 57.3550
  total time: 62.2667
VAE+DNN PGD 1 seed=4
Falsifying: Forall(x0, (((-2.197224577336219 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -1.3862943611198906) & (-3 <= x0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.17453292519943295) & (-0.17453292519943295 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 61.1472
  total time: 66.0069
VAE+DNN PGD 2 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.8472978603872036) & (-1.3862943611198906 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.3490658503988659) & (-0.3490658503988659 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 109.8360
  total time: 114.6859
VAE+DNN PGD 3 seed=4
Falsifying: Forall(x0, (((x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= -0.4054651081081643) & (-3 <= x0) & (-0.8472978603872036 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0))) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.5235987755982988) & (-0.5235987755982988 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 110.1077
  total time: 114.9712
VAE+DNN PGD 4 seed=4
Falsifying: Forall(x0, (((-0.4054651081081643 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.0)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.6981317007977318) & (-0.6981317007977318 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

dnnf
  result: sat
  falsification time: 421.3652
  total time: 426.2060
VAE+DNN PGD 5 seed=4
Falsifying: Forall(x0, (((DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.4054651081081642) & (0.0 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (x0 <= 3)) ==> ((-0.8726646259971648 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 0.8726646259971648))))

dnnf
  result: sat
  falsification time: 1148.7097
  total time: 1153.5596
VAE+DNN PGD 6 seed=4
Falsifying: Forall(x0, (((0.4054651081081642 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 0.8472978603872034) & (x0 <= 3)) ==> ((DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.0471975511965976) & (-1.0471975511965976 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)))))

VAE+DNN PGD 7 seed=4
Falsifying: Forall(x0, (((0.8472978603872034 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (x0 <= 3) & (-3 <= x0) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 1.3862943611198908)) ==> ((-1.2217304763960306 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.2217304763960306))))

VAE+DNN PGD 8 seed=4
Falsifying: Forall(x0, (((-3 <= x0) & (1.3862943611198908 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0) <= 2.1972245773362196) & (x0 <= 3)) ==> ((-1.3962634015954636 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.3962634015954636))))

VAE+DNN PGD 9 seed=4
Falsifying: Forall(x0, (((x0 <= 3) & (2.1972245773362196 < DNN[2:].compose(VAE)[(slice(None, -2, None), 1)](x0)) & (-3 <= x0)) ==> ((-1.5707963267948966 <= DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0)) & (DNN[2:].compose(VAE)[(slice(None, -1, None), 0)](x0) <= 1.5707963267948966))))

